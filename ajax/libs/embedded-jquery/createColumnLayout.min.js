function createColumnLayout(a, b, c) { $("." + a).each(function () { var a = 1, d = 0; if (b.indexOf(".") > -1 ? items = $(this).children(b) : (b = "." + b, items = $(this).children(b)), items.each(function () { var e = $(this), f = e.children().first(); switch (c) { case 2: e.twoColOuter(a), f.twoColInner(a); break; case 3: e.threeColOuter(a), f.threeColInner(a); break; case 4: e.fourColOuter(a), f.fourColInner(a); break; case 5: e.fiveColOuter(a), f.fiveColInner(a); break; case 6: e.twoColOuter(a), f.threeColInner(a); break; default: console.log("No case met in switch statement. Check the number of columns parameter in the method call. ") } var g = d % 2; if (1 === g && f.addClass("alt"), a++, a > c) { var h = selectColumns(c, b); h.parent().hasClass("sf_cols") || h.wrapAll("<div class='sf_cols'></div>"), a = 1, d++ } }), items.length % c && (e = $(b + ".sf_colsOut").last(), numFilledSiblings = e.prevUntil(".sf_cols").length, !e.parent().hasClass("sf_cols") && c - 1 > numFilledSiblings)) { colFillStartPos = numFilledSiblings + 2, e.fillRow(c, colFillStartPos, b); var e = selectColumns(c, b); e.parent().hasClass("sf_cols") || e.wrapAll("<div class='sf_cols'></div>") } }) } function selectColumns(a, b) { var c = "", d = ""; switch (a) { case 2: c = "50"; break; case 3: break; case 4: c = "25"; break; case 5: c = "20"; break; default: console.log("No case met in switch statement. Check the number of columns parameter in the method call. ") } if (3 == a) for (i = 1; a >= i; i++) d += 2 == i ? ":not(.sf_cols) > " + b + ".sf_colsOut.sf_" + a + "cols_" + i + "_34, " : ":not(.sf_cols) > " + b + ".sf_colsOut.sf_" + a + "cols_" + i + "_33, "; else for (i = 1; a >= i; i++) d += ":not(.sf_cols) > " + b + ".sf_colsOut.sf_" + a + "cols_" + i + "_" + c + ", "; return d = d.substring(0, d.length - 2), $(d) } function add_record(a) { if (sessionStorage.numberOfRuns) if (200 == sessionStorage.numberOfRuns) { alert("DONE!"); var b = performance.now(); a = b - c, add_record(a), console.log(a); var c = performance.now() } else sessionStorage.setItem("Run #" + Number(sessionStorage.numberOfRuns), a), sessionStorage.numberOfRuns = Number(sessionStorage.numberOfRuns) + 1; else sessionStorage.setItem("numberOfRuns", 0) } function clear_records() { sessionStorage.clear() } jQuery.fn.extend({ twoColOuter: function (a) { return this.addClass("sf_colsOut sf_2cols_" + a + "_50") }, twoColInner: function (a) { return this.addClass("sf_colsIn sf_2cols_" + a + "in_50") }, threeColOuter: function (a) { return 2 == a ? this.addClass("sf_colsOut sf_3cols_" + a + "_34") : this.addClass("sf_colsOut sf_3cols_" + a + "_33") }, threeColInner: function (a) { return 2 == a ? this.addClass("sf_colsIn sf_3cols_" + a + "in_34") : this.addClass("sf_colsIn sf_3cols_" + a + "in_33") }, fourColOuter: function (a) { return this.addClass("sf_colsOut sf_4cols_" + a + "_25") }, fourColInner: function (a) { return this.addClass("sf_colsIn sf_4cols_" + a + "in_25") }, fiveColOuter: function (a) { return this.addClass("sf_colsOut sf_5cols_" + a + "_20") }, fiveColInner: function (a) { return this.addClass("sf_colsIn sf_5cols_" + a + "in_20") }, fillRow: function (a, b, c) { var d = ""; switch (a) { case 2: return this.wrapAll("<div class='sf_cols'></div>").after("<div class='" + c.replace(".", "") + " sf_colsOut sf_2cols_2_50'><div class='sf_colsIn sf_2cols_2in_50'></div></div>"); case 3: for (i = b; a >= i; i++) d += 2 == i ? "<div class='" + c.replace(".", "") + " sf_colsOut sf_" + a + "cols_" + i + "_34'><div class='sf_colsIn sf_" + a + "cols_" + i + "in_34'></div></div>" : "<div class='" + c.replace(".", "") + " sf_colsOut sf_" + a + "cols_" + i + "_33'><div class='sf_colsIn sf_" + a + "cols_" + i + "in_33'></div></div>"; return this.after(d); case 4: for (i = b; a >= i; i++) d += "<div class='" + c.replace(".", "") + " sf_colsOut sf_" + a + "cols_" + i + "_25'><div class='sf_colsIn sf_" + a + "cols_" + i + "in_25'></div></div>"; return this.after(d); case 5: for (i = b; a >= i; i++) d += "<div class='" + c.replace(".", "") + " sf_colsOut sf_" + a + "cols_" + i + "_20'><div class='sf_colsIn sf_" + a + "cols_" + i + "in_20'></div></div>"; return this.after(d); default: console.log("No case met in switch statement. Check the number of columns parameter in the method call. ") } } });
